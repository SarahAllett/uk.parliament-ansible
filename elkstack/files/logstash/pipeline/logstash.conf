# Managed by ansible_host.

input {


  beats {
  # The port to listen on for filebeat connections.
  port => 5044
  # The IP address to listen for filebeat connections.
  host => "0.0.0.0"
  type => "filebeat"
  }



  heartbeat {
    interval => 10
    type => "heartbeat"
  }



  s3 {
    codec => "json"
    bucket => "cloudflare-log-collector"
    delete => true
    interval => 60
    region => "eu-west-1"
    type => "cloudflare"
  }

  cloudwatch_logs {
   log_group => ["elasticsearch"]
    region => "eu-west-1"
    type => "common-cloudwatch-elasticsearch"
  }

  cloudwatch_logs {
    log_group => ["logstash"]
    region => "eu-west-1"
    type => "common-cloudwatch-logstash"
  }

  cloudwatch_logs {
    log_group => ["kibana"]
    region => "eu-west-1"
    type => "common-cloudwatch-kibana"
  }

  kinesis {
    kinesis_stream_name => "cloudwatch-common"
    region => "eu-west-1"
    type => "kinesis"
    codec => cloudwatch_logs

  }


}

filter {

if [type] == "cloudflare" {

  math {
    calculate => [
      [ "div", "EdgeStartTimeStamp", "1000000000", "EdgeStartTimeStampEPOCH"],
      [ "div", "EdgeEndTimeStamp", "1000000000", "EdgeEndTimeStampEPOCH"]
    ]
  }



}

if [logStream] =~ "iis"  {
  grok {

   match => { "message" => "%{IP:serverIP} %{WORD:method} %{URIPATH:uri-stem} %{NOTSPACE:uri-query} %{NUMBER:port} %{NOTSPACE:username} %{IP:serverIP2} %{NOTSPACE:useragent} %{NOTSPACE:referrer} %{NUMBER:response} %{NOTSPACE:win32-substatus} %{NOTSPACE:win32-status} %{NOTSPACE:time-taken}" }
  }

}



}

output {
elasticsearch {
  hosts    => [ 'internal-elasticsearch-1696314485.eu-west-1.elb.amazonaws.com:9200']
  index => "%{type}-%{+YYYY.MM.dd}"
}
}
